{
  "version": 3,
  "sources": ["../../../app/routes/filter.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/filter.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/filter.tsx\");\n  import.meta.hot.lastModified = \"1760869845361.913\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Form, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { z } from \"zod\";\nconst sourceSchema = z.union([z.literal(\"followed\"), z.literal(\"top\")]).catch(\"followed\");\nexport const loader = async ({\n  request\n}) => {\n  const url = new URL(request.url);\n  const source = sourceSchema.parse(url.searchParams.get(\"source\"));\n  return json({\n    source\n  });\n};\nexport default function Page() {\n  _s();\n  const {\n    source\n  } = useLoaderData();\n  const submit = useSubmit();\n  return <>\n\t\t\t<Form method=\"get\" onChange={e => submit(e.currentTarget)}>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type={\"radio\"} name=\"source\" defaultChecked={source !== \"top\"} value=\"followed\" />{\" \"}\n\t\t\t\t\t\tFollowed\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type={\"radio\"} name=\"source\" defaultChecked={source === \"top\"} value=\"top\" />{\" \"}\n\t\t\t\t\t\tTop\n\t\t\t\t\t</label>\n\t\t\t\t</fieldset>\n\t\t\t</Form>\n\t\t\t<p>{source}</p>\n\t\t</>;\n}\n_s(Page, \"LPWxCB3gbac6VvXj57dl0DRb+zc=\", false, function () {\n  return [useLoaderData, useSubmit];\n});\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAmBZ;AAvCT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAMA,IAAM,eAAe,iBAAE,MAAM,CAAC,iBAAE,QAAQ,UAAU,GAAG,iBAAE,QAAQ,KAAK,CAAC,CAAC,EAAE,MAAM,UAAU;AAUzE,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,SAAS,UAAU;AACzB,SAAO,sFACN;AAAA,uDAAC,QAAK,QAAO,OAAM,UAAU,OAAK,OAAO,EAAE,aAAa,GACvD,6DAAC,cACA;AAAA,yDAAC,WACA;AAAA,2DAAC,WAAM,MAAM,SAAS,MAAK,UAAS,gBAAgB,WAAW,OAAO,OAAM,cAA5E;AAAA;AAAA;AAAA;AAAA,eAAuF;AAAA,QAAG;AAAA,QAAI;AAAA,WAD/F;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,WACA;AAAA,2DAAC,WAAM,MAAM,SAAS,MAAK,UAAS,gBAAgB,WAAW,OAAO,OAAM,SAA5E;AAAA;AAAA;AAAA;AAAA,eAAkF;AAAA,QAAG;AAAA,QAAI;AAAA,WAD1F;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SARD;AAAA;AAAA;AAAA;AAAA,WASA,KAVD;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,IACA,mDAAC,OAAG,oBAAJ;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA,OAbL;AAAA;AAAA;AAAA;AAAA,SAcP;AACF;AACA,GAAG,MAAM,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,eAAe,SAAS;AAClC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
